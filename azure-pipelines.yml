trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

variables:
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/') }}:
    PKGVER: ${{ variables['Build.SourceBranchName'] }}
  ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')) }}:
    PKGVER: '0.0.0-dev'
  SRC_PATH: 'src/ATech.Ring.DotNet.Cli'
  BuildConfiguration: Release

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macOS-latest'
    windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

steps:

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.0.x'
    includePreviewVersions: true

- task: DotNetCoreCLI@2
  displayName: 'Pack'
  inputs:
    command: 'pack'
    packagesToPack: '$(SRC_PATH)/*.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: PKGVER
    verbosityPack: 'Normal'
    buildProperties: VersionPrefix=$(PKGVER)
  condition: succeeded()

- task: InstallSSHKey@0
  displayName: 'Install k8s-debug-poc repo deploy key'
  inputs:
    knownHostsEntry: 'github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl'
    sshPublicKey: '$(ringPubKey)'
    sshKeySecureFile: 'ring.key'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    workingDirectory: tests/Ring.Tests.Integration
  condition: succeeded()

#- task: PublishTestResults@2
#  inputs:
#    testResultsFiles: '$(System.DefaultWorkingDirectory)/testResults.xml'
#    testResultsFormat: 'NUnit'
#    failTaskOnFailedTests: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)/tests/Ring.Tests.Integration/bin/Debug/net6.0/artifacts
    artifactName: 'Logs ($(imageName))'
  condition: always()
  
- bash: dotnet nuget push -s  https://api.nuget.org/v3/index.json -k $(nuget-api-key) $(Build.ArtifactStagingDirectory)/*.nupkg
  displayName: 'Push'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
